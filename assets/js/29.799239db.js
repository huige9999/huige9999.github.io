(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{509:function(v,_,t){"use strict";t.r(_);var s=t(2),a=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"第一个js程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第一个js程序"}},[v._v("#")]),v._v(" 第一个JS程序")]),v._v(" "),_("h3",{attrs:{id:"浏览器环境中-代码书写位置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器环境中-代码书写位置"}},[v._v("#")]),v._v(" 浏览器环境中，代码书写位置")]),v._v(" "),_("ol",[_("li",[v._v("直接书写到页面中的script元素的内部")]),v._v(" "),_("li",[v._v("书写到外部的js文件，在页面中引用 [推荐]")])]),v._v(" "),_("p",[v._v("代码分离：内容、样式、功能，三者分离，更加容易维护和阅读")]),v._v(" "),_("ul",[_("li",[v._v("页面中，可以存在多个script元素，执行顺序从上到下")]),v._v(" "),_("li",[v._v("如果一个script元素引用了外部文件，内部不能书写任何代码")]),v._v(" "),_("li",[v._v("script元素有一个可选的属性，type，该属性用于指定代码的类型，该属性值是MIME格式")])]),v._v(" "),_("h3",{attrs:{id:"基本语法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[v._v("#")]),v._v(" 基本语法")]),v._v(" "),_("ul",[_("li",[v._v("语法部分必须都是英文符号")]),v._v(" "),_("li",[v._v("js代码由多条语句构成，每个语句用英文分号结束（并非强制要求）")]),v._v(" "),_("li",[v._v("js代码从上到下同步执行")]),v._v(" "),_("li",[v._v("js语言大小写敏感")])]),v._v(" "),_("h3",{attrs:{id:"输出语句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输出语句"}},[v._v("#")]),v._v(" 输出语句")]),v._v(" "),_("p",[v._v("所有的输出语句都不是ES标准。")]),v._v(" "),_("ul",[_("li",[v._v("document.write，该语句用于将数据输出到页面")]),v._v(" "),_("li",[v._v("alert，该语句用于将数据用弹窗的形式显示到页面")]),v._v(" "),_("li",[v._v("console.log，该语句用于将数据显示到控制台")])]),v._v(" "),_("h3",{attrs:{id:"输入语句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输入语句"}},[v._v("#")]),v._v(" 输入语句")]),v._v(" "),_("p",[v._v("所有的输入语句都不是ES标准")]),v._v(" "),_("ul",[_("li",[v._v("prompt，该语句用于获取用户输入的数据")])]),v._v(" "),_("h3",{attrs:{id:"注释"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[v._v("#")]),v._v(" 注释")]),v._v(" "),_("p",[v._v("注释：提供给代码阅读者使用，不会参与执行")]),v._v(" "),_("ol",[_("li",[v._v("单行注释  //")]),v._v(" "),_("li",[v._v("多行注释  /*   */")])]),v._v(" "),_("h2",{attrs:{id:"数据和数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据和数据类型"}},[v._v("#")]),v._v(" 数据和数据类型")]),v._v(" "),_("p",[v._v("数据：有用的信息")]),v._v(" "),_("p",[v._v("数据类型：数据的分类")]),v._v(" "),_("p",[v._v("本章节学习的是：不同类型的数据的字面量表示法")]),v._v(" "),_("h3",{attrs:{id:"原始类型-基本类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#原始类型-基本类型"}},[v._v("#")]),v._v(" 原始类型(基本类型)")]),v._v(" "),_("p",[v._v("原始类型指不可再细分的类型")]),v._v(" "),_("ol",[_("li",[v._v("数字类型 number")])]),v._v(" "),_("p",[v._v("直接书写即可")]),v._v(" "),_("blockquote",[_("p",[v._v("了解：\n数字类型可以加上前缀，来表示不同的进制\n0：表示8进制\n0x：表示16进制\n0b: 表示2进制")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("字符串类型 string")])]),v._v(" "),_("p",[v._v("字符串：一长串文本（0个或多个）")]),v._v(" "),_("ul",[_("li",[v._v("单引号 '")]),v._v(" "),_("li",[v._v('双引号 "')]),v._v(" "),_("li",[v._v("飘，`，叫做模板字符串")])]),v._v(" "),_("p",[v._v("在字符串中，如何表示一个特殊字符，可以使用转义符（\\）")]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("布尔类型 boolean")])]),v._v(" "),_("p",[v._v("布尔类型用于表达真或假两种状态")]),v._v(" "),_("ul",[_("li",[v._v("true，表示真")]),v._v(" "),_("li",[v._v("false，表示假")])]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("undefined类型")])]),v._v(" "),_("p",[v._v("表示未定义，不存在。")]),v._v(" "),_("p",[v._v("只有一种数据书写方式：undefined")]),v._v(" "),_("ol",{attrs:{start:"5"}},[_("li",[v._v("null类型")])]),v._v(" "),_("p",[v._v("表示空，不存在。")]),v._v(" "),_("p",[v._v("只有一种数据书写方式：null")]),v._v(" "),_("blockquote",[_("p",[v._v("区分某些长数字和字符串: 如果按照数字的方式阅读，则使用数字类型；否则使用字符串类型")])]),v._v(" "),_("h3",{attrs:{id:"引用类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用类型"}},[v._v("#")]),v._v(" 引用类型")]),v._v(" "),_("p",[v._v("引用类型有两种：")]),v._v(" "),_("ul",[_("li",[v._v("对象 object （事物，东西，玩意儿）")])]),v._v(" "),_("p",[v._v("可以认为，对象，是由多个基本类型组合而成。\n"),_("strong",[v._v("属性")]),v._v("：对象的成员")]),v._v(" "),_("ul",[_("li",[v._v("函数")])]),v._v(" "),_("h3",{attrs:{id:"得到数据的类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#得到数据的类型"}},[v._v("#")]),v._v(" 得到数据的类型")]),v._v(" "),_("p",[v._v("在数据前加上 typeof")]),v._v(" "),_("blockquote",[_("p",[v._v("js的bug（特征）： typeof null，得到的是object")])]),v._v(" "),_("h3",{attrs:{id:"字面量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字面量"}},[v._v("#")]),v._v(" 字面量")]),v._v(" "),_("p",[v._v("直接书写的具体的数据，叫做"),_("strong",[v._v("字面量")])]),v._v(" "),_("h2",{attrs:{id:"变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[v._v("#")]),v._v(" 变量")]),v._v(" "),_("h3",{attrs:{id:"什么是变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是变量"}},[v._v("#")]),v._v(" 什么是变量")]),v._v(" "),_("p",[v._v("变量是一块内存空间，用于保存数据")]),v._v(" "),_("blockquote",[_("p",[v._v("计算机：CPU、内存、硬盘、输入输出设备\n内存：存取速度快，数据易丢失\n硬盘：存取速度慢，数据永久保存\n计算机程序的运行，仅与内存打交道")])]),v._v(" "),_("h3",{attrs:{id:"如何使用变量"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#如何使用变量"}},[v._v("#")]),v._v(" 如何使用变量")]),v._v(" "),_("ol",[_("li",[v._v("声明（定义）变量")])]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("var")]),v._v(" 变量名"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[_("strong",[v._v("变量声明后，它的值为undefined")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("给变量赋值")])]),v._v(" "),_("p",[v._v("向变量的内存空间中存放数据")]),v._v(" "),_("ul",[_("li",[v._v("变量的值是可变的")])]),v._v(" "),_("p",[v._v("变量可以被重新赋值，新的值会覆盖原来的值")]),v._v(" "),_("ul",[_("li",[v._v("变量的名称")])]),v._v(" "),_("p",[v._v("在开发中，凡是需要自行命名的位置，叫做标识符")]),v._v(" "),_("p",[v._v("标识符的规范：")]),v._v(" "),_("p",[v._v("1） [必]只能以英文字母、下划线、$开头\n2)  [必]其他位置可以出现数字、英文字母、下划线、$\n3)  [必]不可以与关键字、保留词重复\n4)  [选]标识符应该做到望文知义\n5)  [选]如果有多个单词，使用驼峰命名法，单词首字母大写")]),v._v(" "),_("blockquote",[_("p",[v._v("大驼峰：每个单词首字母大写\n小驼峰：除第一个单词外，首字母大写\n目前，使用的标识符都是小驼峰命名法。")])]),v._v(" "),_("blockquote",[_("p",[v._v("宽度：width，高度：height，区域：area （quyu）")])]),v._v(" "),_("ul",[_("li",[v._v("声明和赋值合并")])]),v._v(" "),_("p",[v._v("变量的声明和赋值可以一条语句书写。")]),v._v(" "),_("p",[v._v("这是语法糖。")]),v._v(" "),_("p",[v._v("语法糖仅仅是为了方便代码书写或记忆，并不会有实质性的改变。")]),v._v(" "),_("ul",[_("li",[v._v("多个变量可以合并声明并赋值")])]),v._v(" "),_("p",[v._v("语法糖")]),v._v(" "),_("ul",[_("li",[_("p",[_("strong",[v._v("任何可以书写数据的地方，都可以书写变量")])])]),v._v(" "),_("li",[_("p",[v._v("若使用一个未声明的变量，会导致错误")])])]),v._v(" "),_("p",[v._v("例外：使用typeof得到类型时，可以是未声明的变量，得到的结果是undefined")]),v._v(" "),_("ul",[_("li",[_("strong",[v._v("JS中存在变量提升")])])]),v._v(" "),_("p",[v._v("所有变量的声明，会自动的提到代码的最顶部")]),v._v(" "),_("p",[v._v("但是，这种提升，不会超越脚本块。")]),v._v(" "),_("ul",[_("li",[v._v("JS中允许定义多个同名变量")])]),v._v(" "),_("p",[v._v("同名变量，提升后会变成一个。")]),v._v(" "),_("h2",{attrs:{id:"变量和对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#变量和对象"}},[v._v("#")]),v._v(" 变量和对象")]),v._v(" "),_("p",[v._v("原始类型：number、string、boolean、null、undefined")]),v._v(" "),_("p",[v._v("引用类型：object、function 函数")]),v._v(" "),_("h3",{attrs:{id:"在变量中存放对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#在变量中存放对象"}},[v._v("#")]),v._v(" 在变量中存放对象")]),v._v(" "),_("ol",[_("li",[v._v("通过变量，读取对象中的某个属性")])]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("变量名"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("属性名\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("p",[_("strong",[v._v("当读取的属性不存在时，会得到undefined")])]),v._v(" "),_("p",[_("strong",[v._v("当读取属性的对象不存在（undefined 或 null）时，程序报错")])]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("通过变量，更改对象中的某个属性")])]),v._v(" "),_("p",[_("strong",[v._v("当赋值的属性不存在时，会添加属性")])]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("删除属性")])]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[v._v("delete")]),v._v(" 变量名"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(".")]),v._v("属性名"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v(";")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("ol",{attrs:{start:"4"}},[_("li",[v._v("属性表达式")])]),v._v(" "),_("p",[v._v("给属性赋值，或读取属性时，可以使用下面的格式操作")]),v._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[v._v("对象变量"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("[")]),_("span",{pre:!0,attrs:{class:"token string"}},[v._v('"属性名"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("]")]),v._v("\n")])]),v._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[v._v("1")]),_("br")])]),_("ul",[_("li",[v._v("某些属性名中包含特殊字符")])]),v._v(" "),_("p",[v._v("实际上，JS对属性名的命名要求并不严格，属性可以是任何形式的名字")]),v._v(" "),_("p",[_("strong",[v._v("属性的名字只能是字符串，如果你书写的是数字，会自动转换为字符串")])]),v._v(" "),_("h3",{attrs:{id:"全局对象"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#全局对象"}},[v._v("#")]),v._v(" 全局对象")]),v._v(" "),_("p",[v._v("JS大部分的宿主环境，都会提供一个特殊的对象，该对象可以直接在JS代码中访问，该对象叫做全局对象")]),v._v(" "),_("p",[v._v("在浏览器环境中，全局对象为window，表示整个窗口")]),v._v(" "),_("p",[v._v("全局对象中的所有属性，可以直接使用，而不需要写上全局对象名。")]),v._v(" "),_("p",[_("strong",[v._v("开发者定义的所有变量，实际上，会成为window对象的属性。")])]),v._v(" "),_("p",[_("strong",[v._v("如果变量没有被赋值，则该变量不会覆盖window对象上的同名属性。")])]),v._v(" "),_("h2",{attrs:{id:"引用类型-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#引用类型-2"}},[v._v("#")]),v._v(" 引用类型")]),v._v(" "),_("p",[v._v("原始类型 引用类型（对象、函数）")]),v._v(" "),_("p",[_("strong",[v._v("原始类型的变量，存放的具体的值")])]),v._v(" "),_("p",[_("strong",[v._v("引用类型的变量，存放的是内存地址")])]),v._v(" "),_("p",[_("strong",[v._v("凡是出现对象字面量的位置，都一定在内存出现一个新的对象")])]),v._v(" "),_("blockquote",[_("p",[v._v("扩展知识：JS中的垃圾回收\n垃圾回收器，会定期的发现内存中无法访问到的对象，该对象称之为垃圾，垃圾回收器会在合适的时间将其占用的内存释放。")])])])}),[],!1,null,null,null);_.default=a.exports}}]);