(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{463:function(t,a,s){t.exports=s.p+"assets/img/3.c5c6ee38.png"},511:function(t,a,s){"use strict";s.r(a);var v=s(2),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" @规则")]),t._v(" "),a("ol",[a("li",[t._v("import")])]),t._v(" "),a("p",[t._v('@import "路径";')]),t._v(" "),a("p",[t._v("导入另外一个css文件")]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("charset")])]),t._v(" "),a("p",[t._v('@charset "utf-8";')]),t._v(" "),a("p",[t._v("告诉浏览器该CSS文件，使用的字符编码集是utf-8，必须写到第一行")]),t._v(" "),a("p",[t._v("使用条件：css文件中有中文")]),t._v(" "),a("h2",{attrs:{id:"web字体和图标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web字体和图标"}},[t._v("#")]),t._v(" web字体和图标")]),t._v(" "),a("h3",{attrs:{id:"web字体"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web字体"}},[t._v("#")]),t._v(" web字体")]),t._v(" "),a("p",[t._v("放在服务器上的字体，如果用户电脑上没有会自动下载使用该字体")]),t._v(" "),a("ol",[a("li",[t._v("定义一个字体")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('@font-face {\n  font-family: "这里写字体的名字",\n  src: url("字体文件路径");\n}\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("使用字体")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('font-family: "定义的字体的名字";\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h3",{attrs:{id:"字体图标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字体图标"}},[t._v("#")]),t._v(" 字体图标")]),t._v(" "),a("p",[t._v("理解：设计成图片形式的文字")]),t._v(" "),a("h3",{attrs:{id:"小结归纳"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结归纳"}},[t._v("#")]),t._v(" 小结归纳")]),t._v(" "),a("p",[t._v("将字体文件想象成一张表,每个单元格是一个文字形状(编码:文字)")]),t._v(" "),a("p",[t._v("口诀：哪张表？哪个单元格?\n对应:font-family的值确定字体表\n编码值确定形状")]),t._v(" "),a("h2",{attrs:{id:"bfc-块级格式化上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc-块级格式化上下文"}},[t._v("#")]),t._v(" BFC(块级格式化上下文)")]),t._v(" "),a("h3",{attrs:{id:"概念详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念详解"}},[t._v("#")]),t._v(" 概念详解")]),t._v(" "),a("p",[a("strong",[t._v("它是一块独立的渲染区域，规定了该区域中常规流块盒的布局")])]),t._v(" "),a("p",[t._v("解析：\n常规流块盒的布局：")]),t._v(" "),a("ul",[a("li",[t._v("水平方向上撑满包含块")]),t._v(" "),a("li",[t._v("垂直方向上依次摆放")]),t._v(" "),a("li",[t._v("外边距无缝相邻会合并")]),t._v(" "),a("li",[t._v("它的自动高度和摆放位置无视浮动元素")])]),t._v(" "),a("p",[t._v("BFC渲染区域：\n由某个HTML元素创建，以下元素会在内部创建BFC区域:")]),t._v(" "),a("ul",[a("li",[t._v("根元素\n意味着html元素创建的BFC区域覆盖了网页中的所有元素")]),t._v(" "),a("li",[t._v("浮动和绝对定位元素")]),t._v(" "),a("li",[t._v("oveflow不等于visible的块盒\n意味着设置了oveflow属性\n"),a("img",{attrs:{src:s(463),alt:"alt text"}})])]),t._v(" "),a("p",[t._v("独立的：\n不同的BFC区域渲染时互不干扰")]),t._v(" "),a("p",[t._v("具体规则：\n创建BFC的元素，")]),t._v(" "),a("ul",[a("li",[t._v("它的自动高度需要计算浮动元素")]),t._v(" "),a("li",[t._v("它的边框盒不会与浮动元素重叠\n不设置会无视浮动元素，设置了会避开浮动元素\n避开的原理：自动设置了margin\n适用场景：左盒子固定、有盒子宽度自适应剩余空间")]),t._v(" "),a("li",[t._v("不会和它的子元素进行外边距合并")])]),t._v(" "),a("h3",{attrs:{id:"小结归纳-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结归纳-2"}},[t._v("#")]),t._v(" 小结归纳")]),t._v(" "),a("ul",[a("li",[t._v("创建独立的渲染区域")]),t._v(" "),a("li",[t._v("解决外边距合并、浮动带来的高度塌陷问题")]),t._v(" "),a("li",[t._v("创建BFC的副作用最小的方式：overflow: hidden、auto、scroll")])]),t._v(" "),a("h2",{attrs:{id:"布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局"}},[t._v("#")]),t._v(" 布局")]),t._v(" "),a("h3",{attrs:{id:"多栏布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多栏布局"}},[t._v("#")]),t._v(" 多栏布局")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("两栏布局\n左元素设置float:left，右元素常规流块盒创建BFC(宽度会撑满剩余空间)")])]),t._v(" "),a("li",[a("p",[t._v("三栏布局\n左右分别:float:left、right\n中间常规流创建BFC\n(创建BFC的元素独立渲染会避开浮动盒子)")])])]),t._v(" "),a("h3",{attrs:{id:"等高布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#等高布局"}},[t._v("#")]),t._v(" 等高布局")]),t._v(" "),a("p",[t._v("通常情况：左侧是菜单高度会不够，右侧内容高度会超出左侧高度，所以要解决侧边高度不够的问题。")]),t._v(" "),a("p",[t._v("解决方式：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("css3的弹性盒布局(弹性item高度默认拉伸)")])]),t._v(" "),a("li",[a("p",[t._v("js控制高度")])]),t._v(" "),a("li",[a("p",[t._v("伪等高\nheight设置非常大，比如:height: 10000px;\n然后设置margin-bottom: -9990px;\n那么盒子的总高度只有10px")]),t._v(" "),a("p",[t._v("原理：我们希望父元素高度由右侧元素决定，所以设置margin-bottom: -9990px让左侧盒子整体的高度很小，最后再给父元素加上overflow: hidden;\n设置height:10000px的目的是弥补左侧盒子的高度不够高的问题")]),t._v(" "),a("p",[t._v("记忆：给左侧盒子足够高度同时让父元素高度取决于右侧盒子的高度")])])]),t._v(" "),a("h3",{attrs:{id:"后台布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后台布局"}},[t._v("#")]),t._v(" 后台布局")]),t._v(" "),a("p",[t._v("header、sidebar、content")]),t._v(" "),a("ul",[a("li",[t._v("整个容器固定定位宽高相对视口100%")]),t._v(" "),a("li",[t._v("header定高，绝对定位在顶部")]),t._v(" "),a("li",[t._v("内容区域也是100%宽高，设置padding-top: header高度")]),t._v(" "),a("li",[t._v("sidebar定宽，高度100%，左浮动,溢出滚动")]),t._v(" "),a("li",[t._v("content设置BFC避开sidebar，高度100%")])]),t._v(" "),a("h2",{attrs:{id:"行高的取值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行高的取值"}},[t._v("#")]),t._v(" 行高的取值")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("如果是px，则按px为准\n因为px是绝对单位\n适用情况：多行文本字体大小相同，可以在父元素用px单位统一设置行高\n但如果每一行的字体大小不一样，父元素就不能用px单位统一设置行高了")])]),t._v(" "),a("li",[a("p",[t._v("如果直接写数字\n先继承给子元素然后计算出px，所以子元素会按照得到各自字体大小倍数的行高，所以这种方式是能在父元素统一设置行高的!")])]),t._v(" "),a("li",[a("p",[t._v("如果是em单位\nem表示当前元素的字体大小，比如2em是当前的2倍")])])]),t._v(" "),a("p",[t._v("如果在父元素设置2em，它会先计算出2em=多少px，然后再继承给子元素，所以这个单位也不能统一设置行高")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("如果是百分比\n和em一样，也是相对当前元素的字体大小，所以也不能统一设置行高")])]),t._v(" "),a("p",[t._v("理解记忆：写数值会直接继承给子元素，写em和百分比都是相对单位要先计算出px值才能继承给子元素")]),t._v(" "),a("h2",{attrs:{id:"body的背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#body的背景"}},[t._v("#")]),t._v(" body的背景")]),t._v(" "),a("h3",{attrs:{id:"关于背景颜色"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于背景颜色"}},[t._v("#")]),t._v(" 关于背景颜色")]),t._v(" "),a("p",[a("strong",[t._v("引入一个概念：画布区域")])]),t._v(" "),a("p",[t._v("画布区域的背景：")]),t._v(" "),a("ul",[a("li",[t._v("最小宽度为视口宽度")]),t._v(" "),a("li",[t._v("最小高度为视口高度")]),t._v(" "),a("li",[t._v("画布的实际宽高会随着实际网页内容的变化而变化(有滚动条的情况)")])]),t._v(" "),a("p",[t._v("HTML元素的背景颜色：\n覆盖画布")]),t._v(" "),a("p",[t._v("给body设置背景颜色：\n如果HTML元素有背景颜色，则一切正常(覆盖边框盒)\n如果HTML元素没有背景颜色，则body背景来覆盖画布")]),t._v(" "),a("p",[t._v("理解记忆：")]),t._v(" "),a("ul",[a("li",[t._v("画布不是指html5中的canvas，就是一块区域承载着网页内容！")]),t._v(" "),a("li",[t._v("设置这个规则是为了方便你给整个网页设置背景!")])]),t._v(" "),a("h3",{attrs:{id:"关于背景图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于背景图"}},[t._v("#")]),t._v(" 关于背景图")]),t._v(" "),a("ol",[a("li",[t._v("背景图宽度的百分比相对于视口")]),t._v(" "),a("li",[t._v("背景图高度的百分比相对于网页高度")]),t._v(" "),a("li",[t._v("背景图的横向位置百分比相对于视口")]),t._v(" "),a("li",[t._v("背景图的纵向位置百分比相对于网页高度")])]),t._v(" "),a("h3",{attrs:{id:"小结归纳-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结归纳-3"}},[t._v("#")]),t._v(" 小结归纳：")]),t._v(" "),a("p",[t._v("给body元素设置背景，先看HTML元素有没有背景，如果没有就注意参照物是视口还是网页")]),t._v(" "),a("h2",{attrs:{id:"堆叠上下文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#堆叠上下文"}},[t._v("#")]),t._v(" 堆叠上下文")]),t._v(" "),a("p",[t._v("堆叠上下文（stack context），它是一块区域，这块区域由某个元素创建(类似于BFC)，它规定了该区域中的内容在Z轴上排列的先后顺序。")]),t._v(" "),a("h3",{attrs:{id:"创建堆叠上下文的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建堆叠上下文的元素"}},[t._v("#")]),t._v(" 创建堆叠上下文的元素")]),t._v(" "),a("ol",[a("li",[t._v("html元素（根元素）")]),t._v(" "),a("li",[t._v("设置了z-index（非auto）数值的定位元素")])]),t._v(" "),a("h3",{attrs:{id:"同一个堆叠上下文中元素在z轴上的排列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同一个堆叠上下文中元素在z轴上的排列"}},[t._v("#")]),t._v(" 同一个堆叠上下文中元素在Z轴上的排列")]),t._v(" "),a("p",[t._v("从后到前的排列顺序：")]),t._v(" "),a("ol",[a("li",[t._v("创建堆叠上下文的元素的背景和边框")]),t._v(" "),a("li",[t._v("堆叠级别(z-index, stack level)为负值的堆叠上下文")]),t._v(" "),a("li",[t._v("常规流非定位的块盒")]),t._v(" "),a("li",[t._v("非定位的浮动盒子")]),t._v(" "),a("li",[t._v("常规流非定位行盒")]),t._v(" "),a("li",[t._v("任何 z-index 是 auto 的定位子元素，以及 z-index 是 0 的堆叠上下文")]),t._v(" "),a("li",[t._v("堆叠级别为正值的堆叠上下文")])]),t._v(" "),a("p",[t._v("每个堆叠上下文，独立于其他堆叠上下文，它们之间不能相互穿插。")]),t._v(" "),a("h3",{attrs:{id:"小结归纳-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结归纳-4"}},[t._v("#")]),t._v(" 小结归纳：")]),t._v(" "),a("p",[t._v("比较两个元素的层级关系：\n1. 先判断两个元素是否在同一个堆叠上下文中，\n2. 如果在，按照如下规则判断：\n从低到高的顺序：\n1) 创建堆叠上下文元素的背景和边框\n2) z-index为负数的元素\n3) 常规流块盒->浮动盒子->常规流行盒\n4) 定位元素或者z-index为0的元素\n5) z-index为正数的元素\n3. 如果不在，分别找出它们所属的上下文再判断是不是在同一个堆叠上下文中")]),t._v(" "),a("p",[t._v("补充：谁创建了堆叠上下文，就把它和它的后代元素当成一个整体")]),t._v(" "),a("h2",{attrs:{id:"svg"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#svg"}},[t._v("#")]),t._v(" svg")]),t._v(" "),a("h3",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),a("p",[t._v("svg: scalable vector graphics，可缩放的矢量图(区别于像素点组成的位图)")]),t._v(" "),a("ol",[a("li",[t._v("该图片使用代码书写而成")]),t._v(" "),a("li",[t._v("缩放不会失真")]),t._v(" "),a("li",[t._v("内容轻量(仅仅是指令数据而不是若干像素点信息)")])]),t._v(" "),a("p",[t._v("原理：\n普通图片是一个个像素点组成的\nsvg图片定义好指令(比如：从这个坐标到另外一个坐标连成一条直线或弧线)，浏览器根据指令画出图形")]),t._v(" "),a("p",[t._v("局限性：\n它只能实现简单的图片，现实生活中高清相机拍出来的图片svg很难描述出来!")]),t._v(" "),a("h3",{attrs:{id:"使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用方式"}},[t._v("#")]),t._v(" 使用方式")]),t._v(" "),a("p",[t._v("由于svg本质是指令代码所以使用方式：")]),t._v(" "),a("ol",[a("li",[t._v("嵌入网页")]),t._v(" "),a("li",[t._v("单独作为一个文件")])]),t._v(" "),a("p",[t._v("svg代码：用xml格式书写")]),t._v(" "),a("h3",{attrs:{id:"代码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码分析"}},[t._v("#")]),t._v(" 代码分析")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' \x3c!-- 1.svg描述一张图片，width和height属性设置图片的原始大小，也可以用style属性设置背景颜色。 --\x3e\n<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">\n  \x3c!-- 画一个矩形,左上角坐标:(5,5)、宽高：80,90,填充色:red,描边颜色:#000,描边宽度:5 --\x3e\n        <rect x="5" y="5" width="80" height="80" fill="red" stroke="#000" stroke-width="5" />\n    \x3c!-- 画一个圆形,中心点坐标:(30,30)、半径: 30,填充色: skyblue --\x3e\n         <circle cx="200" cy="200" r="30" fill="skyblue" />\n      \x3c!-- 画一个椭圆，长轴半径：100，短轴半径：50，中心点坐标：(200,200)，填充色：透明，描边颜色：#000，描边宽度：5 --\x3e\n        <ellipse cx="200" cy="200" rx="100" ry="50" fill-opacity="0" stroke="#000" stroke-width="5" />\n          \x3c!-- 画一个线条，起点坐标：(100,100)，终点坐标：(300,300)，颜色：#000，宽度：5 --\x3e\n        <line x1="100" y1="100" x2="300" y2="300" stroke="#000" stroke-width="5" />\n        \x3c!-- 画一条折线，点坐标：(300,100)、(350,100)、(350,150)、(400,400)，颜色：#000，宽度：5 --\x3e\n         \x3c!-- 如果fill不设置为none,它会自动帮你连成封闭区域并填充颜色。 --\x3e\n        <polyline points="300,100 350,100 350,150" stroke="#000" stroke-width="5" fill="none" />\n      \x3c!-- 通用：路径写法(指令写法) --\x3e\n         \x3c!-- d表示指令 --\x3e\n         \x3c!-- M0 0表示将画笔移动到坐标(0,0) --\x3e\n          \x3c!-- L300 300表示从当前位置画一条直线到坐标(300,300) --\x3e\n         <path d="M0 0 L300 300" stroke="#000" stroke-width="5" />\n           \x3c!-- 描边等样式也可以直接写到style属性中 --\x3e\n         <path d="M0 0 L300 300" stroke="#000" style="stroke: #000;stroke-width: 5;" />\n\n</svg>\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("h2",{attrs:{id:"数据链接-dataurl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据链接-dataurl"}},[t._v("#")]),t._v(" 数据链接(dataurl)")]),t._v(" "),a("h3",{attrs:{id:"概念引入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念引入"}},[t._v("#")]),t._v(" 概念引入")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("<img src='./img/test.png'>\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("分析：将src地址指向的文件读出来并解析成计算机能理解的数据，再把数据当成图片显示出来!")]),t._v(" "),a("p",[t._v("而dataurl是将文件的二进制数据直接写在src属性中！(二进制是无法直接写出来的，所以需要base64编码。)\n"),a("em",[t._v("注：我们写出来的0101是个可打印的字符串而不是真正的二进制数据")])]),t._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("data:MIME,base64编码数据")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(' \x3c!-- 写文件地址 --\x3e\n <link rel="stylesheet" href="./1.css">\n \x3c!-- 用dataurl直接写上css文件内容 --\x3e\n <link rel="stylesheet" href="data:text/css,h1{color: red}">\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"意义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#意义"}},[t._v("#")]),t._v(" 意义")]),t._v(" "),a("p",[t._v("优点：减少HTTP请求\n缺点：文件体积大，不利于缓存")]),t._v(" "),a("h3",{attrs:{id:"适用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),a("p",[t._v("适用于小图片、小文件")]),t._v(" "),a("h3",{attrs:{id:"base64编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base64编码"}},[t._v("#")]),t._v(" base64编码")]),t._v(" "),a("p",[a("strong",[t._v("编码的理解：数据从一种形态转换成另一种形态的过程")])]),t._v(" "),a("p",[t._v("base64编码：\n将图片二进制数据(不可书写)转换成字符串形式(可书写)")]),t._v(" "),a("h2",{attrs:{id:"浏览器兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),a("h3",{attrs:{id:"问题产生的原因"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题产生的原因"}},[t._v("#")]),t._v(" 问题产生的原因")]),t._v(" "),a("ul",[a("li",[t._v("市场竞争\n以前很严重，现在逐渐缓解")])]),t._v(" "),a("p",[t._v("浏览器厂商为了占取市场份额，不断加入自己的新东西吸引用户而官方标准出来的却很慢")]),t._v(" "),a("p",[t._v("当前官方标准出来的很快了，各个浏览器厂商都遵守。")]),t._v(" "),a("p",[t._v("但一些历史遗留问题仍然在。")]),t._v(" "),a("ul",[a("li",[t._v("官方标准变化")])]),t._v(" "),a("p",[t._v("比如旧版本浏览器不支持css3的某些属性(因为那个时候官方标准还未完全确定)，现在基本都支持了")]),t._v(" "),a("h3",{attrs:{id:"厂商前缀"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#厂商前缀"}},[t._v("#")]),t._v(" 厂商前缀")]),t._v(" "),a("p",[t._v("属性不是标准的，是厂商自己独有的。\n比如：\nChrome、safari：-webkit前缀\nfirfox:-moz前缀\nIE:-ms前缀\nopera:-o前缀")]),t._v(" "),a("h3",{attrs:{id:"查找css兼容性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找css兼容性"}},[t._v("#")]),t._v(" 查找css兼容性")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("caniuse.com"),a("OutboundLink")],1)]),t._v(" "),a("h2",{attrs:{id:"居中总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#居中总结"}},[t._v("#")]),t._v(" 居中总结")]),t._v(" "),a("p",[t._v("居中：盒子在其包含块中居中")]),t._v(" "),a("ol",[a("li",[t._v("行盒（行块盒）水平居中")])]),t._v(" "),a("p",[t._v("直接设置行盒（行块盒）父元素"),a("code",[t._v("text-align:center")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("常规流块盒水平居中")])]),t._v(" "),a("p",[t._v("定宽，设置左右margin为auto")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("绝对定位元素的水平居中")])]),t._v(" "),a("p",[t._v("定宽，设置左右的坐标为0（left:0, right:0），将左右margin设置为auto")]),t._v(" "),a("ol",{attrs:{start:"4"}},[a("li",[t._v("单行文本的垂直居中")])]),t._v(" "),a("p",[t._v("设置文本所在元素的行高，为整个区域的高度")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("行块盒或块盒内多行文本的垂直居中")])]),t._v(" "),a("p",[t._v("没有完美方案")]),t._v(" "),a("p",[t._v("设置盒子上下内边距相同，达到类似的效果。")]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("绝对定位的垂直居中")])]),t._v(" "),a("p",[t._v("定高，设置上下的坐标为0（top:0, bottom:0），将上下margin设置为auto")]),t._v(" "),a("h2",{attrs:{id:"样式补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#样式补充"}},[t._v("#")]),t._v(" 样式补充")]),t._v(" "),a("h3",{attrs:{id:"display-list-item"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#display-list-item"}},[t._v("#")]),t._v(" display:list-item")]),t._v(" "),a("p",[t._v("设置为该属性的盒子本质上仍然是个块盒子，但同时该盒子会附带另一个盒子!")]),t._v(" "),a("p",[t._v("元素本身的盒子叫主盒子，附带的盒子叫次盒子。")]),t._v(" "),a("p",[t._v("次盒子和主盒子水平排列")]),t._v(" "),a("ol",[a("li",[t._v("list-style-type\n设置次盒子中内容的类型")]),t._v(" "),a("li",[t._v("list-style-position\n设置次盒子相对于主盒子的位置")]),t._v(" "),a("li",[t._v("list-style: none\n清空次盒子")])]),t._v(" "),a("h3",{attrs:{id:"图片失效时宽高失效的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图片失效时宽高失效的问题"}},[t._v("#")]),t._v(" 图片失效时宽高失效的问题")]),t._v(" "),a("p",[t._v("如果img元素的链接失效,img元素的特性和普通行盒一样，无法设置宽高")]),t._v(" "),a("p",[t._v("解决方法：\n设置display:inline-block或display:block")]),t._v(" "),a("h3",{attrs:{id:"行盒中包含行块盒或可替换元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#行盒中包含行块盒或可替换元素"}},[t._v("#")]),t._v(" 行盒中包含行块盒或可替换元素")]),t._v(" "),a("p",[t._v("现象：行盒的高度与内部高度没关系(因为行盒的高度与字体大小有关)")]),t._v(" "),a("p",[t._v("解决：\n内部：display:block")]),t._v(" "),a("h3",{attrs:{id:"text-align-justify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-align-justify"}},[t._v("#")]),t._v(" text-align:justify")]),t._v(" "),a("p",[t._v("分散对齐(最后一行除外)")]),t._v(" "),a("p",[t._v("如果最后一行也分散对齐，可以给父容器加个::after伪元素并设置display:inline-block;")]),t._v(" "),a("h3",{attrs:{id:"制作一个三角形"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#制作一个三角形"}},[t._v("#")]),t._v(" 制作一个三角形")]),t._v(" "),a("p",[t._v("宽高设置为0，设置边框宽度以及单独设置某一边框颜色")]),t._v(" "),a("h3",{attrs:{id:"direction和writing-mode属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#direction和writing-mode属性"}},[t._v("#")]),t._v(" direction和writing-mode属性")]),t._v(" "),a("p",[t._v("开始和结束是相对的，不同国家有不同习惯\n左右是绝对的")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/*right to left*/\ndirection: rtl; /* 文字从右向左 */\n\n/*设置文字书写方向 例子：古文*/\nwrite-mode: vertical-rl; /* 垂直方向上从右向左书写 */\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("h3",{attrs:{id:"utf-8编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#utf-8编码"}},[t._v("#")]),t._v(" utf-8编码")]),t._v(" "),a("p",[t._v("文字关联数字")]),t._v(" "),a("p",[t._v("HTML实体：")]),t._v(" "),a("ul",[a("li",[t._v("&字符串;")]),t._v(" "),a("li",[t._v("&#数字;")])]),t._v(" "),a("p",[t._v('第二种中的"数字"表示utf-8编码后的数字，它的本体是个文字')]),t._v(" "),a("p",[t._v("补充：字体图标就是这么做的(unicode编码方式使用和font-class方式使用)")])])}),[],!1,null,null,null);a.default=_.exports}}]);