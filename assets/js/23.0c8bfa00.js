(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{494:function(s,n,a){s.exports=a.p+"assets/img/41.0fceb641.png"},495:function(s,n,a){s.exports=a.p+"assets/img/42.774b40d1.png"},557:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"babel的安装和使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel的安装和使用"}},[s._v("#")]),s._v(" babel的安装和使用")]),s._v(" "),n("h3",{attrs:{id:"babel简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel简介"}},[s._v("#")]),s._v(" babel简介")]),s._v(" "),n("p",[s._v("babel一词来自于希伯来语，直译为巴别塔")]),s._v(" "),n("p",[s._v("巴别塔象征统一的国度、统一的语言")]),s._v(" "),n("p",[s._v("而今天的JS世界缺少一座巴别塔，不同版本的浏览器能识别的ES标准并不相同，就导致了开发者面对不同版本的浏览器要使用不同的语言，和古巴比伦一样，前端开发也面临着这样的困境。")]),s._v(" "),n("p",[s._v("babel的出现，就是用于解决这样的问题，它是一个编译器，可以把不同标准书写的语言，编译为统一的、能被各种浏览器识别的语言")]),s._v(" "),n("p",[n("img",{attrs:{src:a(494),alt:"alt text"}})]),s._v(" "),n("p",[s._v("由于语言的转换工作灵活多样，babel的做法和postcss、webpack差不多，它本身仅提供一些分析功能，真正的转换需要依托于插件完成\n"),n("img",{attrs:{src:a(495),alt:"alt text"}})]),s._v(" "),n("h3",{attrs:{id:"babel的安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel的安装"}},[s._v("#")]),s._v(" babel的安装")]),s._v(" "),n("p",[s._v("babel可以和构建工具联合使用，也可以独立使用")]),s._v(" "),n("p",[s._v("如果要独立的使用babel，需要安装下面两个库：")]),s._v(" "),n("ul",[n("li",[s._v("@babel/core：babel核心库，提供了编译所需的所有api")]),s._v(" "),n("li",[s._v("@babel/cli：提供一个命令行工具，调用核心库的api完成编译")])]),s._v(" "),n("h3",{attrs:{id:"babel的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel的使用"}},[s._v("#")]),s._v(" babel的使用")]),s._v(" "),n("p",[s._v("@babel/cli的使用极其简单")]),s._v(" "),n("p",[s._v("它提供了一个命令babel")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 按文件编译\nbabel 要编译的文件 -o 编辑结果文件\n\n# 按目录编译\nbabel 要编译的整个目录 -d 编译结果放置的目录\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"babel的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel的配置"}},[s._v("#")]),s._v(" babel的配置")]),s._v(" "),n("p",[s._v("可以看到，babel本身没有做任何事情，真正的编译要依托于"),n("strong",[s._v("babel插件")]),s._v("和"),n("strong",[s._v("babel预设")]),s._v("来完成")]),s._v(" "),n("blockquote",[n("p",[s._v("babel预设和postcss预设含义一样，是多个插件的集合体，用于解决一系列常见的兼容问题")])]),s._v(" "),n("p",[s._v("如何告诉babel要使用哪些插件或预设呢？需要通过一个配置文件.babelrc")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n    "presets": [],\n    "plugins": []\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"babel预设"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel预设"}},[s._v("#")]),s._v(" babel预设")]),s._v(" "),n("p",[s._v("babel有多种预设，最常见的预设是@babel/preset-env")]),s._v(" "),n("p",[s._v("@babel/preset-env可以让你使用最新的JS语法，而无需针对每种语法转换设置具体的插件")]),s._v(" "),n("h3",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n    "presets": [\n        "@babel/preset-env"\n    ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"兼容的浏览器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#兼容的浏览器"}},[s._v("#")]),s._v(" 兼容的浏览器")]),s._v(" "),n("p",[s._v("@babel/preset-env需要根据兼容的浏览器范围来确定如何编译，和postcss一样，可以使用文件.browserslistrc来描述浏览器的兼容范围")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("last 3 version\n> 1%\nnot ie <= 8\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"自身的配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自身的配置"}},[s._v("#")]),s._v(" 自身的配置")]),s._v(" "),n("p",[s._v("和postcss-preset-env一样，@babel/preset-env自身也有一些配置")]),s._v(" "),n("blockquote",[n("p",[s._v("具体的配置见：https://www.babeljs.cn/docs/babel-preset-env#options")])]),s._v(" "),n("p",[s._v("配置方式是：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n    "presets": [\n        ["@babel/preset-env", {\n            "配置项1": "配置值",\n            "配置项2": "配置值",\n            "配置项3": "配置值"\n        }]\n    ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("其中一个比较常见的配置项是usebuiltins，该配置的默认值是false")]),s._v(" "),n("p",[s._v("它有什么用呢？由于该预设仅转换新的语法，并不对新的API进行任何处理")]),s._v(" "),n("p",[s._v("例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("new Promise(resolve => {\n    resolve()\n})\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("转换的结果为:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("new Promise(function (resolve) {\n  resolve();\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("如果遇到没有Promise构造函数的旧版本浏览器，该代码就会报错")]),s._v(" "),n("p",[s._v("而配置usebuiltins可以在编译结果中注入这些新的API，它的值默认为false，表示不注入任何新的API，可以将其设置为usage，表示根据API的使用情况，按需导入API")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n    "presets": [\n        ["@babel/preset-env", {\n            "useBuiltIns": "usage",\n            "corejs": 3\n        }]\n    ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h3",{attrs:{id:"core-js、generator-runtime、-babel-polyfill"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#core-js、generator-runtime、-babel-polyfill"}},[s._v("#")]),s._v(" core-js、generator-runtime、@babel/polyfill")]),s._v(" "),n("ul",[n("li",[s._v("注入的API定义在core-js中")]),s._v(" "),n("li",[s._v("generator-runtime用于支持async/await语法")])]),s._v(" "),n("blockquote",[n("p",[s._v("@babel/polyfill 已过时，目前被core-js和generator-runtime所取代")])]),s._v(" "),n("h2",{attrs:{id:"babel插件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel插件"}},[s._v("#")]),s._v(" babel插件")]),s._v(" "),n("p",[s._v("除了预设可以转换代码之外，插件也可以转换代码，它们的顺序是：")]),s._v(" "),n("ul",[n("li",[s._v("插件在 Presets 前运行。")]),s._v(" "),n("li",[s._v("插件顺序从前往后排列。")]),s._v(" "),n("li",[s._v("Preset 顺序是颠倒的（从后往前）。")])]),s._v(" "),n("p",[s._v("通常情况下，@babel/preset-env只转换那些已经形成正式标准的语法，对于某些处于早期阶段、还没有确定的语法不做转换。")]),s._v(" "),n("p",[s._v("如果要转换这些语法，就要单独使用插件")]),s._v(" "),n("p",[s._v("下面随便列举一些插件")]),s._v(" "),n("h3",{attrs:{id:"babel-plugin-proposal-class-properties"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-proposal-class-properties"}},[s._v("#")]),s._v(" @babel/plugin-proposal-class-properties")]),s._v(" "),n("p",[s._v("该插件可以让你在类中书写初始化字段")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class A {\n    a = 1;\n    constructor(){\n        this.b = 3;\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"babel-plugin-proposal-function-bind"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-proposal-function-bind"}},[s._v("#")]),s._v(" @babel/plugin-proposal-function-bind")]),s._v(" "),n("p",[s._v("该插件可以让你轻松的为某个方法绑定this")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function Print() {\n    console.log(this.loginId);\n}\n\nconst obj = {\n    loginId: "abc"\n};\n\nobj::Print(); //相当于：Print.call(obj);\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"babel-plugin-proposal-optional-chaining"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-proposal-optional-chaining"}},[s._v("#")]),s._v(" @babel/plugin-proposal-optional-chaining")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const obj = {\n  foo: {\n    bar: {\n      baz: 42,\n    },\n  },\n};\n\nconst baz = obj?.foo?.bar?.baz; // 42\n\nconst safe = obj?.qux?.baz; // undefined\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"babel-plugin-transform-remove-console"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-remove-console"}},[s._v("#")]),s._v(" babel-plugin-transform-remove-console")]),s._v(" "),n("p",[s._v("该插件会移除源码中的控制台输出语句")]),s._v(" "),n("h3",{attrs:{id:"babel-plugin-transform-runtime"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#babel-plugin-transform-runtime"}},[s._v("#")]),s._v(" @babel/plugin-transform-runtime")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("用于提供一些公共的API，这些API会帮助代码转换\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"webpack中使用babel"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack中使用babel"}},[s._v("#")]),s._v(" webpack中使用babel")]),s._v(" "),n("p",[s._v("安装babel-loader,用于调用babel的api")]),s._v(" "),n("p",[s._v("webpack.config.js")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('module.exports = {\n    mode: "development",\n    devtool: "source-map",\n    module: {\n        rules: [\n            { test: /\\.js$/, use: "babel-loader" }\n        ]\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("配置.babelrc")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n    "presets": [\n        ["@babel/preset-env", {\n            "useBuiltIns": "usage",\n            "corejs": 3\n        }]\n    ]\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h2",{attrs:{id:"对类的转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对类的转换"}},[s._v("#")]),s._v(" 对类的转换")]),s._v(" "),n("h3",{attrs:{id:"源代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源代码"}},[s._v("#")]),s._v(" 源代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('class A {\n    // 这是普通属性\n    prop1 = 1;\n\n    // 这是属性方法，用了箭头函数\n    // 用了剩余参数...args\n    method2 = (...args) => {\n        console.log(args);\n    }\n    // 构造器函数\n    // 参数b用了默认值2\n    constructor(b = 2) {\n        // 这也是普通属性\n        this.prop2 = b;\n    }\n    // 这是原型方法\n    method1() {\n        console.log("method1");\n    }\n\n    // 这是静态方法\n    static method3() {\n        console.log("method3", this);\n    }\n    // 这是静态方法，用了箭头函数\n    static method4 = () => {\n        console.log("method4", this);\n    }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"转换后的代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转换后的代码"}},[s._v("#")]),s._v(" 转换后的代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v(' //该立即执行函数的返回结果，应该是一个构造函数A\nvar A = function(){\n    //构造函数A，对应类中的constructor，定义属性并赋值\n    function A() {}\n    // 为构造函数A，定义原型方法，以及静态方法\n    _createClass(A,参数)\n    return A\n}();\n\n// 静态的箭头函数method4变成了普通函数，this始终指向类A\n_defineProperty(A, "method4", function () {\n    console.log("method4", A);\n});\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function A() {\n  // 转换参数默认值\n  var b = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2;\n  // 类调用检查\n  // 判断this是不是A的实例(即：this是不是通过A new出来的)\n _classCallCheck(this, A); \n // 定义一个属性：给this定义一个属性prop1，赋值为1，类似于 this.prop1 = 1;\n _defineProperty(this, "prop1", 1);\n // 将箭头函数方法，作为普通属性定义，箭头函数方法并不在原型上\n  _defineProperty(this, "method2", function () {\n        // 将参数转换成普通数组args(实现剩余参数...args功能)\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        console.log(args);\n    });\n // 给普通属性赋值\n this.prop2 = b;\n}\n\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 给类A上添加原型方法和静态方法\n// 参数2：原型方法\n// 参数3：静态方法\n _createClass(A, [{\n            key: "method1",\n            value: function method1() {\n                console.log("method1");\n            }\n        }], [{\n            key: "method3",\n            value: function method3() {\n                console.log("method3", this);\n            }\n        }]);\n\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps)\n    // 原型对象上定义属性\n        _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps)\n    // 给类定义属性\n        _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br")])]),n("h2",{attrs:{id:"async和await的转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#async和await的转换"}},[s._v("#")]),s._v(" async和await的转换")]),s._v(" "),n("h3",{attrs:{id:"相关面试题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相关面试题"}},[s._v("#")]),s._v(" 相关面试题")]),s._v(" "),n("p",[s._v("为什么使用babel时,如果要转换async和await，需要安装regeneratorRuntime这个库？")]),s._v(" "),n("p",[s._v("答：因为async和await需要转换为生成器，而生成器的语法也属于新语法,也需要进行转换，而转换生成器需要一个库的支持，这个库就是regeneratorRuntime")]),s._v(" "),n("blockquote",[n("p",[s._v("迭代器 + 可迭代协议 + 状态机 = 生成器")])]),s._v(" "),n("h3",{attrs:{id:"源代码-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源代码-2"}},[s._v("#")]),s._v(" 源代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function A() {\n    return new Promise(resolve => {\n        setTimeout(() => {\n            resolve(3);\n        }, 1000);\n    })\n}\n\nasync function B() {\n    const b = await A();\n    const c = await A();\n    return b + c;\n}\n\n\nB().then(data => console.log(data));\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"转换后的代码-简化版"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转换后的代码-简化版"}},[s._v("#")]),s._v(" 转换后的代码(简化版)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function A() {\n    return new Promise(function (resolve) {\n        setTimeout(function () {\n            resolve(3);\n        }, 1000);\n    });\n}\n\nfunction B() {\n    // 数据集：[第一次A(),第二次A(),b + c]\n    var fn = function* () {\n        const b = yield A();\n        const c = yield A();\n        return b + c;\n    };\n    return new Promise(function (resolve, reject) {\n        var gen = fn();\n        function _next(value) {\n            // gen传过去：让该函数完成迭代\n            // resolve,reject传过去：让该函数控制任务的完成与否\n            // _next,value传过去：实现递归迭代\n            asyncGeneratorStep(gen, resolve, reject, _next, value);\n        }\n        // 开始第一次取值\n        _next(undefined);\n    });\n}\n\nB().then(function (data) {\n    return console.log(data);\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function asyncGeneratorStep(gen, resolve, reject, _next, arg) {\n    try {\n        // 从数据集中取一个数据,arg作为本次取值过程的参数\n        var info = gen.next(arg);\n        var value = info.value;\n    } catch (error) {\n        reject(error);\n        return;\n    }\n    // 如果迭代完成，则resolve取到的值\n    if (info.done) {\n        resolve(value);\n    } else {\n        // 不管取得数据是不是Promise,都转换成Promise\n        // 本次数据是Promise并且已经是完成状态了，就迭代获取下一个\n        Promise.resolve(value).then(data => {\n            _next(data);\n        });\n    }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);